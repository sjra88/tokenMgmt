var socket;
window.onload = function(){ 
 //클라이언트 소켓 생성
 socket = io.connect('ws://127.0.0.1:3000');

 //클라이언트 receive 이벤트 함수(서버에서 호출할 이벤트)
 socket.on('server2client', function(data){  
   console.log('서버에서 전송:', data);   

  
   switch(data[0].Name){
    case "TOKENINFO":
      document.getElementById('L_NETID').innerHTML = "Chain ID: "+data[1].NetID;
      document.getElementById('L_NAME').innerHTML = "Name: "+data[1].Name;
      document.getElementById('L_SYMBOL').innerHTML = "Symbol: "+data[1].Symbol;
      document.getElementById('L_DECIMALS').innerHTML = "Decimals: "+data[1].Decimals;
      document.getElementById('L_TOTAL').innerHTML = "TotalSupply: "+toCommas(data[1].TotalSupply);
      document.getElementById('L_STATUS').innerHTML = "Token Status: "+data[1].Status;
      document.getElementById('L_TOKEN_ADDR').innerHTML = "Token Address: "+data[1].TokenAddress;
      document.getElementById('L_TOKEN_OWNER').innerHTML = "Token Owner: "+data[1].TokenOwner; 
      break;
    case "SECRET-BALANCE":
      document.getElementById('ID-Balance_result').value = toCommas(data[1].value);
      document.getElementById('ID-Balance_msg').value = toCommas(data[1].msg);
      break;
    case "SECRET-WL-CHECK":
      document.getElementById('ID-WhiteList_result').value = data[1].value;
      document.getElementById('ID-WhiteList_msg').value = data[1].msg;
      break;
    case "SECRET-WL-ADD":
      document.getElementById('ID-WhiteList_result').value = data[1].value;
      document.getElementById('ID-WhiteList_msg').value = data[1].msg;
      break;
    case "SECRET-WL-REMOVE":
      document.getElementById('ID-WhiteList_result').value = data[1].value;
      document.getElementById('ID-WhiteList_msg').value = data[1].msg;
      break;
    case "SECRET-TOKEN-STATUS":
      document.getElementById('ID-TokenLock_result').value = data[1].value;
      document.getElementById('ID-TokenLock_msg').value = data[1].msg;
      break;
    case "SECRET-TOKEN-LOCK":
      document.getElementById('ID-TokenLock_result').value = data[1].value;
      document.getElementById('ID-TokenLock_msg').value = data[1].msg;
      break;
    case "SECRET-TOKEN-UNLOCK":
      document.getElementById('ID-TokenLock_result').value = data[1].value;
      document.getElementById('ID-TokenLock_msg').value = data[1].msg;
      break;
    case "SECRET-TRANSFER":
      document.getElementById('ID-tx_result').value = data[1].value;
      document.getElementById('ID-tx_msg').value = data[1].msg;
      break;
    case "ETHER-BALANCE":
      document.getElementById('ID-ETHER_Balance_result').value = toCommas(data[1].value);
      document.getElementById('ID-ETHER_Balance_msg').value = toCommas(data[1].msg);
      break;
    case "ETHER-TRANSFER":
      document.getElementById('ID-ETHER_tx_result').value = data[1].value;
      document.getElementById('ID-ETHER_tx_msg').value = data[1].msg;
      break;
    case "SECRET-TOKEN-RESULT":
      if(data[1].value == 1) {
        var txt = `
        
        ---------------- Waiting Transaction!!!!! ---------------------`

      } else {
      var txt = `
      TxHash          : ${data[1].msg.transactionHash}
      From            : ${data[1].msg.from}
      To              : ${data[1].msg.to}
      ContractAddress : ${data[1].msg.contractAddress}
      BlockNumber     : ${data[1].msg.blockNumber}
      GasUsed         : ${data[1].msg.gasUsed}
      Status          : ${data[1].msg.status}
      `;
      //TxHashIndex     : ${data[1].msg.transactionIndex}

      document.getElementById('L_TXMSG').innerHTML = `Transaction message: <a href=https://ropsten.etherscan.io/tx/${data[1].msg.transactionHash} target="_blank">Goto Tx Page</a>`;
      }
      document.getElementById('ID-TxResult').value = txt;
      break;
  }   
 });
};

//    //소켓서버 함수 호출  
//    socket.emit('serverReceiver', message);

//var TSelect;
//var selectValue;
function SelectNetwork(){
//	alert('1234');
	// TSelectNet = document.getElementById('ID-Network');
  // selectNet = TSelectNet.options[TSelectNet.selectedIndex].value;
	// TSelectToken = document.getElementById('ID-Token');
  // selectToken = TSelectToken.options[TSelectToken.selectedIndex].value;
  socket.emit('client2server', {TYPE: "NETWORK", NETWORK: "ROPSTEN", TOKEN: "SECRET"});
//  socket.emit('serverReceiver', {TYPE: "NETWORK", NETWORK: selectNet, TOKEN: selectToken});
	//alert(selectValue);
}

function SecretBalance() {
//	alert('1234');
  TxtValue = document.getElementById('ID-Balance_address').value;
  socket.emit('client2server', {TYPE: "SECRET-BALANCE", ADDRESS: TxtValue});
	//alert(TxtValue);
}

function SecretWhiteList() {
	//alert('1234');
	TSelect = document.getElementById('ID-WhiteList');
	selectValue = TSelect.options[TSelect.selectedIndex].value;
  TxtValue = document.getElementById('ID-WhiteList_address').value;
  socket.emit('client2server', {TYPE: selectValue, ADDRESS: TxtValue});
  //alert(selectValue+", "+TxtValue);	
}
function SecretSend() {
	TSelect = document.getElementById('ID-txType');
	selectValue = TSelect.options[TSelect.selectedIndex].value;
	TxtFrom = document.getElementById('ID-tx_from').value;
	TxtTo = document.getElementById('ID-tx_to').value;
  TxtValue = document.getElementById('ID-tx_value').value;
  socket.emit('client2server', {TYPE: "SECRET-TRANSFER", SIGN: selectValue, PKEY: TxtFrom, TO:TxtTo, AMOUNT: TxtValue});
	//alert(selectValue+", "+TxtFrom+", "+TxtTo+", "+TxtValue);	
}
function SecretTokenStatus(){
	TSelect = document.getElementById('ID-TokenLock');
  selectValue = TSelect.options[TSelect.selectedIndex].value;
  socket.emit('client2server', {TYPE: selectValue});
	//alert(selectValue);
}
function EtherBalance() {
  //	alert('1234');
    TxtValue = document.getElementById('ID-ETHER_Balance_address').value;
    socket.emit('client2server', {TYPE: "ETHER-BALANCE", ADDRESS: TxtValue});
    //alert(TxtValue);
}
function EtherSend() {
	TSelect = document.getElementById('ID-ETHER_txType');
	selectValue = TSelect.options[TSelect.selectedIndex].value;
	TxtFrom = document.getElementById('ID-ETHER_tx_from').value;
	TxtTo = document.getElementById('ID-ETHER_tx_to').value;
  TxtValue = document.getElementById('ID-ETHER_tx_value').value;
  socket.emit('client2server', {TYPE: "ETHER-TRANSFER", SIGN: selectValue, PKEY: TxtFrom, TO:TxtTo, AMOUNT: TxtValue});
	//alert(selectValue+", "+TxtFrom+", "+TxtTo+", "+TxtValue);	
}

// utility
function toCommas(value) {
  //    return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      var parts = value.toString().split(".");
      parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      return parts.join(".");
  }


// in html event
function MgmtMenu(ITEM){
   switch(ITEM) {
    case "SECRET":
      document.getElementById('ID-DIV-SECRET').style.display = "block";
      document.getElementById('ID-DIV-ETHEREUM').style.display = "none";
      document.getElementById('ID-DIV-TOKENINFO').style.display = "none";
      document.getElementById('ID-DIV-TXRESULT').style.display = "block";
      document.getElementById('ID-TxResult').value="";
      break;
    case "Ethereum":
      document.getElementById('ID-DIV-SECRET').style.display = "none";
      document.getElementById('ID-DIV-ETHEREUM').style.display = "block";
      document.getElementById('ID-DIV-TOKENINFO').style.display = "none";
      document.getElementById('ID-DIV-TXRESULT').style.display = "block";
      document.getElementById('ID-TxResult').value="";
      break;
    case "TOKENINFO":
      document.getElementById('ID-DIV-SECRET').style.display = "none";
      document.getElementById('ID-DIV-ETHEREUM').style.display = "none";
      document.getElementById('ID-DIV-TOKENINFO').style.display = "block";
      document.getElementById('ID-DIV-TXRESULT').style.display = "none";
      SelectNetwork();
      break;
  };
	// TSelectToken = document.getElementById('ID-Token');
  // selectToken = TSelectToken.options[TSelectToken.selectedIndex].value;
}

function Token_show_div(ITEM){
  ///alert(ITEM);
  document.getElementById('ID-SECRET-Balance').style.display = document.getElementById('SECRET-rBalance').checked ? "block" : "none";
  document.getElementById('ID-SECRET-TokenTx').style.display = document.getElementById('SECRET-rTokenTx').checked ? "block" : "none";
  document.getElementById('ID-SECRET-WhiteList').style.display = document.getElementById('SECRET-rWhitelist').checked ? "block" : "none";
  document.getElementById('ID-SECRET-TokenLock').style.display = document.getElementById('SECRET-rTokenLock').checked ? "block" : "none";
}


function ETHER_show_div(ITEM){
  ///alert(ITEM);
  document.getElementById('ID-ETHER-Balance').style.display = document.getElementById('ETHER-rBalance').checked ? "block" : "none";
  document.getElementById('ID-ETHER-TokenTx').style.display = document.getElementById('ETHER-rTokenTx').checked ? "block" : "none";
}

